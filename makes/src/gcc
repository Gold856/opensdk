#! /usr/bin/env bash
source ${ROOT_DIR}/consts.env
source ${ROOT_DIR}/targets/${TOOLCHAIN_NAME}/version.env

WPI_PATH="${ROOT_DIR}/build/${TOOLCHAIN_NAME}/"

export PATH="$PATH:${WPI_PATH}/binutils-install"

set -e -x

CFLAGS_FOR_TARGET="-g -O2 -Wformat -Wformat-security"
CXXFLAGS_FOR_TARGET="-g -O2 -Wformat -Wformat-security"
FFLAGS_FOR_TARGET="-g -O2"
LDFLAGS_FOR_TARGET="-Wl,-Bsymbolic-functions -Wl,-z,relro"
export {C,CXX,F,LD}FLAGS_FOR_TARGET

rm -rf "${BUILD_DIR}/gcc-${V_GCC}"
echo "Extracting GCC..."
tar xf ${DOWNLOAD_DIR}/gcc-${V_GCC}.tar.gz

pushd "${BUILD_DIR}/gcc-${V_GCC}/"
./contrib/download_prerequisites
for file in "${PATCH_DIR}"/gcc_*.patch; do
    patch -p0 <$file || true # Allow patch to fail
done
popd

BUILD_TUPLE="$(gcc -dumpmachine)" # Builder
HOST_TUPLE="${WPIHOSTTARGET}"

# No Canadian Build on MacOS
if [ -n "${WPITARGET}" ]; then
    # If tuple mismatch then confirm if there is first pass
    if [ "$BUILD_TUPLE" != "$HOST_TUPLE" ]; then
        command -v "$WPIHOSTTARGET-gcc" || exit
        command -v "$TARGET_TUPLE-gcc" || exit
        unset CC CXX CPP LD 
    fi
fi

rm -rf ${BUILD_DIR}/gcc-{build,install}
mkdir -p ${BUILD_DIR}/gcc-{build,install}
pushd ${BUILD_DIR}/gcc-build
BINUTILS_PREFIX="${BUILD_DIR}/binutils-install/${WPIPREFIX}/bin/${TARGET_PREFIX}"
${BUILD_DIR}/gcc-${V_GCC}/configure \
    --build="${BUILD_TUPLE}" \
    --host="${WPIHOSTTARGET}" \
    --target="${TARGET_TUPLE}" \
    --enable-threads=posix \
    --with-cpu=${TARGET_CPU} \
    --with-float=${TARGET_FLOAT} \
    --with-fpu=${TARGET_FPU} \
    --with-specs="${TARGET_SPECS}" \
    --program-prefix="${TARGET_PREFIX}" \
    --enable-languages=c,c++ \
    --enable-shared \
    --enable-lto \
    --disable-nls \
    "--with-pkgversion=GCC for FRC ${V_YEAR}" \
    --with-cloog \
    --prefix="$WPIPREFIX" \
    --with-sysroot="$WPIPREFIX/$TARGET_TUPLE" \
    --enable-poison-system-directories \
    --disable-libmudflap \
    --with-build-sysroot="/usr/local/$TARGET_TUPLE" \
    --libdir="$WPIPREFIX/$TARGET_TUPLE/usr/lib" \
    --with-gxx-include-dir="$WPIPREFIX/$TARGET_TUPLE/usr/include/c++/${V_GCC}" \
    $([ "$WPITARGET" != "Windows" ] && echo --with-system-zlib)
make -j"$JOBS" all-gcc
DESTDIR=${BUILD_DIR}/gcc-install make install-gcc
popd
